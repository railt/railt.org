

@use(class: "App\\GraphQL\\Out\\MenuPresenter")
@use(class: "App\\GraphQL\\Controllers\\MenuController")


extend type Query {
    menu: [Menu!]!
        @route(action: "MenuController@findRootItems")
}


enum MenuMoveDirection {
    UP,
    DOWN
}


enum MenuType {
    TAB,
    DOCUMENTATION_PAGE
}


type MenuMutation {
    create(data: MenuInput!): Menu!
        @can(ability: "create")

    update(id: ID!, data: MenuInput!): Boolean
        @can(ability: "update")

    remove(id: ID!): Boolean
        @can(ability: "delete")

    move(id: ID!, direction: MenuMoveDirection): Boolean
        @can(ability: "update")

    attach(parent: ID!, children: [ID!]!): Menu
        @can(ability: "update")
}


input MenuInput {
    urn: String!
    title: String!
    type: MenuType!
    orderId: Int! = 0
}


type Menu
    @out(action: "MenuPresenter@fromEntity")
{
    id: ID!
    urn: String
    orderId: Int!
    title: String!
    type: MenuType!
    children: [Menu!]!
        @route(action: "MenuController@findChildren", relation: {
            child: "parentId"
        })
}

