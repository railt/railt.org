
@use(class: "App\\GraphQL\\Out\\NavigationPresenter")
@use(class: "App\\GraphQL\\Out\\DocumentationPresenter")
@use(class: "App\\GraphQL\\Controllers\\DocumentationController")

extend type Query {
    """Получение конкретной страницы документации по её пути"""
    docs("""Путь к странице документации""" path: String): Documentation
        @route(action: "DocumentationController@findByUrn")
}

"""Объект документации"""
type Documentation implements Updatable
    @out(action: "DocumentationPresenter@fromEntity")
{
    """Уникальный идентификатор страницы."""
    id: ID!

    """Адрес страницы в оригинальном GitHub репозитории."""
    url: String!

    """Относительный путь к странице,
    т.е. её идентификатор в адресной строке."""
    urn: String!

    """Заголовок (наименование) страницы."""
    title: String!

    """Содержимое страницы в формате HTML,
    т.е. доступное для отображения "на месте" как есть."""
    content: String!

    """Массив из ссылок навигации внутри этой страницы."""
    nav: [DocumentationNavigation!]!

    """Объект времени последнего обновления страницы."""
    updatedAt: Carbon!
}

"""Объект навигации по странице"""
type DocumentationNavigation
    @out(action: "NavigationPresenter@fromEntity")
{
    """Идентификатор якоря на латинице, указывающий на
    переход ("name" ссылки) внутри страницы"""
    slug: String!

    """Уровень вложенности (глубины) элемента навигации."""
    level: Int!

    """Заголовок элемента навигации."""
    title: String!
}
